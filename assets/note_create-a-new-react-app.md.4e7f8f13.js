import{o as n,c as a,d as s}from"./app.dbd2c2fe.js";const t='{"title":"记录创建新的React应用的方式","description":"","frontmatter":{"date":"2021-04-30","title":"记录创建新的React应用的方式","tags":["React","Webpack","Typescript"],"describe":"记录创建新的React应用的方式"},"headers":[{"level":2,"title":"创建新的React应用","slug":"创建新的react应用"},{"level":3,"title":"CDN方式","slug":"cdn方式"},{"level":3,"title":"工具链","slug":"工具链"},{"level":3,"title":"从零开始配置工具链","slug":"从零开始配置工具链"},{"level":3,"title":"使用Typescript进行开发","slug":"使用typescript进行开发"}],"relativePath":"note/create-a-new-react-app.md","lastUpdated":1619776852651}',p={},e=s('<h2 id="创建新的react应用"><a class="header-anchor" href="#创建新的react应用" aria-hidden="true">#</a> 创建新的React应用</h2><h3 id="cdn方式"><a class="header-anchor" href="#cdn方式" aria-hidden="true">#</a> CDN方式</h3><p><a href="https://zh-hans.reactjs.org/docs/add-react-to-a-website.html" target="_blank" rel="noopener noreferrer">案例</a></p><h3 id="工具链"><a class="header-anchor" href="#工具链" aria-hidden="true">#</a> 工具链</h3><p>Create React App</p><p>运行命令</p><div class="language-"><pre><code>npx create-react-app my-app\ncd my-app\nnpm start\n</code></pre></div><p><a href="https://zh-hans.reactjs.org/docs/create-a-new-react-app.html#recommended-toolchains" target="_blank" rel="noopener noreferrer">更多</a></p><h3 id="从零开始配置工具链"><a class="header-anchor" href="#从零开始配置工具链" aria-hidden="true">#</a> 从零开始配置工具链</h3><h4 id="起步"><a class="header-anchor" href="#起步" aria-hidden="true">#</a> 起步</h4><p>运行命令</p><div class="language-"><pre><code>mkdir my-react-app\ncd my-react-app\nnpm init\n</code></pre></div><p>在新的项目目录中,创建以下目录结构</p><div class="language-"><pre><code>.\n+-- public\n+-- src\n</code></pre></div><p>public目录负责静态资源,src目录负责核心代码</p><p>在public目录下新建index.html</p><div class="language-html"><pre><code><span class="token comment">&lt;!-- sourced from https://raw.githubusercontent.com/reactjs/reactjs.org/master/static/html/single-file-example.html --&gt;</span>\n<span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">&gt;</span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>UTF-8<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>viewport<span class="token punctuation">&quot;</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>width=device-width, initial-scale=1, shrink-to-fit=no<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>React Starter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>root<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>noscript</span><span class="token punctuation">&gt;</span></span>\n    You need to enable JavaScript to run this app.\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>noscript</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>../dist/bundle.js<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span>\n</code></pre></div><p>后面将会通过构建的React应用<code>&lt;script src=&quot;../dist/bundle.js&quot;&gt;&lt;/script&gt;</code>渲染到页面<code>&lt;div id=&quot;root&quot;&gt;&lt;/div&gt;</code>.</p><h4 id="babel"><a class="header-anchor" href="#babel" aria-hidden="true">#</a> Babel</h4><p>运行命令</p><div class="language-"><pre><code>npm install --save-dev @babel/core@7.1.0 @babel/cli@7.1.0 @babel/preset-env@7.1.0 @babel/preset-react@7.0.0\n</code></pre></div><p>在根目录下新建.babelrc文件,并输入以下内容</p><div class="language-"><pre><code>{\n  &quot;presets&quot;: [&quot;@babel/env&quot;, &quot;@babel/preset-react&quot;]\n}\n</code></pre></div><h4 id="webpack"><a class="header-anchor" href="#webpack" aria-hidden="true">#</a> Webpack</h4><p>引入Webpack,并配置一个开发环境</p><p>运行命令</p><div class="language-"><pre><code>npm install --save-dev webpack@4.19.1 webpack-cli@3.1.1 webpack-dev-server@3.1.8 style-loader@0.23.0 css-loader@1.0.0 babel-loader@8.0.2\n</code></pre></div><p>在根目录下创建文件webpack.config.js,它将会导出一个配置对象到Webpack中</p><p>webpack.config.js</p><div class="language-javascript"><pre><code><span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;path&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> webpack <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;webpack&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  entry<span class="token operator">:</span> <span class="token string">&quot;./src/index.js&quot;</span><span class="token punctuation">,</span>\n  mode<span class="token operator">:</span> <span class="token string">&quot;development&quot;</span><span class="token punctuation">,</span>\n  module<span class="token operator">:</span> <span class="token punctuation">{</span>\n    rules<span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.(js|jsx)$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>\n        exclude<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">(node_modules|bower_components)</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>\n        loader<span class="token operator">:</span> <span class="token string">&quot;babel-loader&quot;</span><span class="token punctuation">,</span>\n        options<span class="token operator">:</span> <span class="token punctuation">{</span> presets<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;@babel/env&quot;</span><span class="token punctuation">]</span> <span class="token punctuation">}</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span>\n        test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.css$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>\n        use<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;style-loader&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;css-loader&quot;</span><span class="token punctuation">]</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">]</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  resolve<span class="token operator">:</span> <span class="token punctuation">{</span> extensions<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;*&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;.js&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;.jsx&quot;</span><span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  output<span class="token operator">:</span> <span class="token punctuation">{</span>\n    path<span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&quot;dist/&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    publicPath<span class="token operator">:</span> <span class="token string">&quot;/dist/&quot;</span><span class="token punctuation">,</span>\n    filename<span class="token operator">:</span> <span class="token string">&quot;bundle.js&quot;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  devServer<span class="token operator">:</span> <span class="token punctuation">{</span>\n    contentBase<span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&quot;public/&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    port<span class="token operator">:</span> <span class="token number">3000</span><span class="token punctuation">,</span>\n    publicPath<span class="token operator">:</span> <span class="token string">&quot;http://localhost:3000/dist/&quot;</span><span class="token punctuation">,</span>\n    hotOnly<span class="token operator">:</span> <span class="token boolean">true</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  plugins<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token keyword">new</span> <span class="token class-name">webpack<span class="token punctuation">.</span>HotModuleReplacementPlugin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n</code></pre></div><h4 id="react"><a class="header-anchor" href="#react" aria-hidden="true">#</a> React</h4><p>引入React</p><div class="language-"><pre><code>npm install react react-dom\n</code></pre></div><p>在src目录下新建index.html并输入以下内容</p><div class="language-JavaScript"><pre><code><span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">&quot;react&quot;</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> ReactDOM <span class="token keyword">from</span> <span class="token string">&quot;react-dom&quot;</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> App <span class="token keyword">from</span> <span class="token string">&quot;./App.js&quot;</span><span class="token punctuation">;</span>\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>App <span class="token operator">/</span><span class="token operator">&gt;</span><span class="token punctuation">,</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&quot;root&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre></div><p>在src目录下新建App.js并输入以下内容</p><div class="language-JavaScript"><pre><code><span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> Component<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;react&quot;</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token string">&quot;./App.css&quot;</span><span class="token punctuation">;</span>\n\n<span class="token keyword">class</span> <span class="token class-name">App</span> <span class="token keyword">extends</span> <span class="token class-name">Component</span><span class="token punctuation">{</span>\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n    <span class="token keyword">return</span><span class="token punctuation">(</span>\n      <span class="token operator">&lt;</span>div className<span class="token operator">=</span><span class="token string">&quot;App&quot;</span><span class="token operator">&gt;</span>\n        <span class="token operator">&lt;</span>h1<span class="token operator">&gt;</span> Hello<span class="token punctuation">,</span> World<span class="token operator">!</span> <span class="token operator">&lt;</span><span class="token operator">/</span>h1<span class="token operator">&gt;</span>\n      <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>\n</code></pre></div><p>在src目录下新建App.css并输入以下内容</p><div class="language-"><pre><code>.App {\n  margin: 1rem;\n  font-family: Arial, Helvetica, sans-serif;\n}\n</code></pre></div><p>在package.json新增以下内容</p><div class="language-"><pre><code>{\n    ...\n    &quot;scripts&quot;: {\n        &quot;start&quot;: &quot;webpack-dev-server --mode development&quot;\n    },\n    ...\n}\n</code></pre></div><p>好了,一个简易Babel7+React的配置已完成,可以开始愉快的编程了. 执行以下命令,开启服务.</p><div class="language-"><pre><code>npm run start\n</code></pre></div><h3 id="使用typescript进行开发"><a class="header-anchor" href="#使用typescript进行开发" aria-hidden="true">#</a> 使用Typescript进行开发</h3><p>采用babel7对ts,tsx进行转换,使用tsc --noEmit进行类型检查</p><h4 id="bebel"><a class="header-anchor" href="#bebel" aria-hidden="true">#</a> bebel</h4><div class="language-"><pre><code>npm install --save-dev @babel/preset-typescript @babel/plugin-proposal-class-properties @babel/plugin-proposal-object-rest-spread \n</code></pre></div><h4 id="typescript"><a class="header-anchor" href="#typescript" aria-hidden="true">#</a> typescript</h4><p>引入React类库的类型声明文件</p><div class="language-"><pre><code>npm install --save-dev @types/react @types/react-dom typescript\n\n</code></pre></div><p>创建tsconfig.json,并输入以下内容</p><div class="language-"><pre><code>{\n  &quot;compilerOptions&quot;: {\n    &quot;target&quot;: &quot;es2015&quot;,                      \n    &quot;module&quot;: &quot;commonjs&quot;,\n    &quot;jsx&quot;: &quot;react&quot;,\n    &quot;strict&quot;: true, \n    &quot;esModuleInterop&quot;: true\n  },\n  &quot;include&quot;: [\n    &quot;src/**/*&quot;\n  ],\n  &quot;exclude&quot;: [\n    &quot;node_modules&quot;\n  ]\n}\n</code></pre></div><h4 id="webpack-2"><a class="header-anchor" href="#webpack-2" aria-hidden="true">#</a> webpack</h4><p>修改webpack.config.js配置</p><div class="language-"><pre><code>\nconst path = require(&quot;path&quot;);\nconst webpack = require(&quot;webpack&quot;);\n\nmodule.exports = {\n  entry: &quot;./src/index.tsx&quot;,\n  mode: &quot;development&quot;,\n  module: {\n    rules: [\n      {\n        test: /\\.(ts|tsx)$/,\n        exclude: /node_modules/,\n        loader: &quot;babel-loader&quot;,\n        options: { presets: [&quot;@babel/env&quot;] }\n      },\n      {\n        test: /\\.css$/,\n        use: [&quot;style-loader&quot;, &quot;css-loader&quot;]\n      }\n    ]\n  },\n  resolve: { extensions: [&quot;*&quot;, &quot;.ts&quot;, &quot;.tsx&quot;, &quot;.js&quot;, &quot;.jsx&quot;] },\n  output: {\n    path: path.resolve(__dirname, &quot;dist/&quot;),\n    publicPath: &quot;/dist/&quot;,\n    filename: &quot;bundle.js&quot;\n  },\n  devServer: {\n    contentBase: path.join(__dirname, &quot;public/&quot;),\n    port: 3000,\n    publicPath: &quot;http://localhost:3000/dist/&quot;,\n    hotOnly: true\n  },\n  plugins: [new webpack.HotModuleReplacementPlugin()]\n};\n\n</code></pre></div><p>把src的.js后缀改为tsx或ts</p><p>在package.json加入类型检查脚本&#39;check&#39;</p><div class="language-"><pre><code>{\n  ...\n  &quot;scripts&quot;: {\n    ...\n    &quot;check&quot;: &quot;tsc --noEmit&quot;\n  }\n  ...\n}\n\n</code></pre></div><p>执行npm run check可以对src目录下的ts进行类型检查.</p><p>好了,一个简易Typescript+Babel7+React的配置已完成,可以开始愉快的编程了.</p>',60);p.render=function(s,t,p,o,c,l){return n(),a("div",null,[e])};export default p;export{t as __pageData};
